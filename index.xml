<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>A DevOps Odyssey</title><link>https://davidwmcneill.github.io/</link><description>Recent content on A DevOps Odyssey</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 23 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://davidwmcneill.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Progressive Delivery with Argo-rollouts</title><link>https://davidwmcneill.github.io/posts/progressive-delivery/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://davidwmcneill.github.io/posts/progressive-delivery/</guid><description>What is progressive delivery? There are a lots of definitions of &amp;lsquo;progressive delivery&amp;rsquo; so I&amp;rsquo;ll go with the one I find to be the most concise via devopsinsitute
Progressive delivery is the process of pushing changes to a product iteratively, first to a small audience and then to increasingly larger audiences to maintain quality control. Progressive Delivery is a modified version of Continuous Delivery
There are a few options for implementing progressive delivery within a kubernetes cluster (see also flagger).</description></item><item><title>Resource Catalogue</title><link>https://davidwmcneill.github.io/posts/resources/</link><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate><guid>https://davidwmcneill.github.io/posts/resources/</guid><description>This will be a live document as I discover new resources. A go-to for inspiration or just learning something new. A catalogue of all my favorite DevOps gurus!
Github Resource repositories How They SRE: A curated collection of publicly available resources on how technology and tech-savvy organizations around the world practice Site Reliability Engineering (SRE)
Awesome-aws: A curated list of awesome AWS libraries, open source repos, guides, blogs, and other resources.</description></item><item><title>Selenium with Kubernetes</title><link>https://davidwmcneill.github.io/posts/selenium-kubernetes/</link><pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate><guid>https://davidwmcneill.github.io/posts/selenium-kubernetes/</guid><description>Background A deeper look into Selenium has been on my &amp;lsquo;todo&amp;rsquo; list for a fair while, Time to get my hands dirty!
This blog topic is a good excuse to cover off a few learning points:
Get an automated test running in a local k3d cluster to generate some traffic when testing progressive deployments with Argo-rollouts Investigate the options for running Selenium in K8s and how it can scale Write some Python!</description></item><item><title>GitOps in practice</title><link>https://davidwmcneill.github.io/posts/argocd-gitops/</link><pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate><guid>https://davidwmcneill.github.io/posts/argocd-gitops/</guid><description>Previously I looked at K3d with ArgoCD and recklessly threw in GitOps without a real explanation&amp;hellip;
What is GitOps and why do I need it? Just another buzzword? I personally don&amp;rsquo;t think so.
To Quote from WeaveWorks:
GitOps works by using Git as a single source of truth for declarative infrastructure and applications. With GitOps, the use of software agents can alert on any divergence between Git with what&amp;rsquo;s running in a cluster, and if there&amp;rsquo;s a difference, Kubernetes reconcilers automatically update or rollback the cluster depending on the case.</description></item><item><title>K3d + ArgoCD = Local GitOps</title><link>https://davidwmcneill.github.io/posts/k3d-argocd/</link><pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate><guid>https://davidwmcneill.github.io/posts/k3d-argocd/</guid><description>The pre-ramble A quick look at what ArgoCD and K3d are&amp;hellip;
What is ArgoCD?
Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes.
Top alternatives&amp;hellip;
FluxCD What is K3d
k3d is a lightweight wrapper to run k3s (Rancher Labâ€™s minimal Kubernetes distribution) in docker.
Top alternatives&amp;hellip;
Kind Minikube The idea I&amp;rsquo;ve been working with ArgoCD in production for a few years now and it is in my opinion the biggest game changer in terms of Kubernetes continuous delivery management.</description></item><item><title>Hugo with GitHub Pages</title><link>https://davidwmcneill.github.io/posts/hugo-gh-pages/</link><pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate><guid>https://davidwmcneill.github.io/posts/hugo-gh-pages/</guid><description>Before writing a blog, there needs to be a blog&amp;hellip;
A good place to start!
Hugo to the rescue What is Hugo?
Hugo is a static HTML and CSS website generator written in Go
Hugo with a Theme I first crossed paths with Hugo while working on a project using the git-sync sidecar integration; Hugo is used as part of the demo configuration for this tool.
I&amp;rsquo;ve since used Hugo for a demo local k3d build pipeline and it was while creating this I stumbled upon the integration with github actions.</description></item><item><title>Blog Motivation</title><link>https://davidwmcneill.github.io/posts/motivation/</link><pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate><guid>https://davidwmcneill.github.io/posts/motivation/</guid><description>Typically I track my technical note taking using Notion. This works well as a personal wiki for everything I learn where the smaller details are likely to slip out of my brain in the future!
The premise of this blog is to build on these notes with a more formal summary for future reference (and hopefully help sharpen my knowledge on the subject matter). I&amp;rsquo;ve found this to be the most effective way to learn and recall a subject in more detail.</description></item></channel></rss>